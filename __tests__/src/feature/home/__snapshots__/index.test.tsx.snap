// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Home renders correctly 1`] = `
<View
  style={
    {
      "padding": 16,
    }
  }
>
  <View
    style={
      {
        "backgroundColor": "rgb(234,242,250)",
        "height": 1,
        "marginVertical": 16,
        "width": "100%",
      }
    }
  />
  <Text
    style={
      {
        "fontSize": 16,
        "fontWeight": "bold",
      }
    }
  >
    User Types
  </Text>
  <RCTScrollView
    data={
      [
        "Admin",
        "Manager",
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    style={
      {
        "marginTop": 16,
      }
    }
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "rgb(234,242,250)",
              "borderRadius": 10,
              "flex": 1,
              "flexDirection": "row",
              "marginVertical": 4,
              "opacity": 1,
              "paddingHorizontal": 16,
              "paddingVertical": 16,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "borderColor": "rgb(48,111,199)",
                  "borderRadius": 12,
                  "borderWidth": 1,
                  "height": 24,
                  "justifyContent": "center",
                  "width": 24,
                },
                {
                  "borderColor": "rgb(48,111,199)",
                },
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgb(48,111,199)",
                  "borderRadius": 8,
                  "height": 16,
                  "width": 16,
                }
              }
            />
          </View>
          <Text
            style={
              {
                "marginHorizontal": 16,
              }
            }
          >
            Admin
          </Text>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderRadius": 10,
              "flex": 1,
              "flexDirection": "row",
              "marginVertical": 4,
              "opacity": 1,
              "paddingHorizontal": 16,
              "paddingVertical": 16,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "borderColor": "rgb(48,111,199)",
                  "borderRadius": 12,
                  "borderWidth": 1,
                  "height": 24,
                  "justifyContent": "center",
                  "width": 24,
                },
                {
                  "borderColor": "rgb(234,242,250)",
                },
              ]
            }
          />
          <Text
            style={
              {
                "marginHorizontal": 16,
              }
            }
          >
            Manager
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      {
        "backgroundColor": "rgb(234,242,250)",
        "height": 1,
        "marginVertical": 16,
        "width": "100%",
      }
    }
  />
  <Text
    style={
      {
        "fontSize": 16,
        "fontWeight": "bold",
      }
    }
  >
    Admin
     
    Users
  </Text>
  <RCTScrollView
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    style={
      {
        "marginTop": 16,
      }
    }
    viewabilityConfigCallbackPairs={[]}
  >
    <View />
  </RCTScrollView>
  <View
    style={
      {
        "backgroundColor": "rgb(234,242,250)",
        "height": 1,
        "marginVertical": 16,
        "width": "100%",
      }
    }
  />
</View>
`;

exports[`Test Home should UserType render and setSelected called with given value 1`] = `ShallowWrapper {}`;

exports[`Test Home should UserView render 1`] = `ShallowWrapper {}`;
